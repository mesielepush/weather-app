!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var r=n(1),i=n(2);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function c(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],i=0;i<e.length;i++){var o=e[i],s=t.base?o[0]+t.base:o[0],u=n[s]||0,d="".concat(s," ").concat(u);n[s]=u+1;var l=c(d),m={css:o[1],media:o[2],sourceMap:o[3]};-1!==l?(a[l].references++,a[l].updater(m)):a.push({identifier:d,updater:b(m,t),references:1}),r.push(d)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,l=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function m(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=l(t,i);else{var o=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function p(e,t,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var f=null,g=0;function b(e,t){var n,r,i;if(t.singleton){var o=g++;n=f||(f=u(t)),r=m.bind(null,n,o,!1),i=m.bind(null,n,o,!0)}else n=u(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=c(n[r]);a[i].references--}for(var o=s(e,t),u=0;u<n.length;u++){var d=c(n[u]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}n=o}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Modak&display=swap);"]),t.push([e.i,'body{background-color:#000}.main{position:relative;margin-top:5rem;width:45rem;height:45rem;border-radius:25px;background-color:#97b0e5}.main div{color:#fff}.main .dates{position:relative;border-radius:20px;padding:2rem;left:-11rem;top:-3.5rem;width:auto;height:4rem;display:none;background-color:rgba(61,21,6,.5);font-family:"Press Start 2P",cursive}.main .dates span{color:#fff}.main .city_country{position:relative;top:1rem;width:auto;padding:2rem;height:2rem;display:none;font-family:"Press Start 2P",cursive;border-radius:25px}.main .city_country #cities{font-size:2.54rem;color:#000}.main .city_country #country{font-size:2rem;padding:1rem;margin-left:1.5rem;border-radius:25%;color:#fff;background-color:rgba(61,21,6,.5)}.main .switch{position:relative;display:inline-block;padding:.5rem;width:60px;height:34px;margin:5px;top:-4rem;left:15rem;background-color:rgba(61,21,6,0)}.main .switch #centigrades{position:absolute;font-size:1.5rem;right:4rem;top:-0.15rem;color:#000;font-family:"Modak",cursive}.main .switch #farenh{position:absolute;font-size:1.5rem;right:-2rem;top:-0.15rem;color:#000;font-family:"Modak",cursive}.main .slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:rgba(45,85,13,.7);-webkit-transition:.4s;transition:.4s}.main .slider::before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:#d85204;-webkit-transition:.4s;transition:.4s}.main input:checked+.slider{background-color:#064158}.main input:focus+.slider{box-shadow:0 0 1px #064158}.main input:checked+.slider::before{-webkit-transform:translateX(26px);-ms-transform:translateX(26px);transform:translateX(26px)}.main .slider.round{border-radius:34px}.main .slider.round::before{background-color:#42d416;border-radius:50%}.main .others{position:relative;left:0;bottom:-9rem;width:35rem;height:5rem;border-radius:25px;background-color:rgba(59,33,2,.5)}.main .others div{border-radius:25%;padding:1rem;background-color:rgba(10,15,56,.4)}.main .others div span{color:#fff}.main .input_city{margin-top:5rem;padding:1rem;position:relative;bottom:-4.5rem;border-radius:25px;background-color:rgba(4,33,41,.5)}.main .input_city #city{text-align:center}.main #no_city{display:none}.main #temp{font-size:5rem;color:#d1d0d6;font-family:"Modak",cursive}.main .temps{border-radius:25px;background-color:rgba(78,30,7,.4);position:relative;bottom:-7rem;width:35rem;height:10rem}.main .temps div{border-radius:25px;justify-content:center;align-items:center;padding:1rem}.main .temps #temperature{color:#050000;font-weight:400;position:relative;top:1rem;font-size:1.5rem;font-family:"Modak",cursive}.main .temps .miscelanious{background-color:rgba(3,51,63,.7)}.main .temps .miscelanious div{background-color:rgba(61,21,6,.5)}.main .temps .miscelanious div span{color:#fff}',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(a=r,c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(s," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}var a,c,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&i[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},function(e,t,n){"use strict";n.r(t);n(0);var r=()=>{const e=new Date;return`${["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()].toUpperCase()} / ${e.getDate()} / ${e.getFullYear()}`};var i=e=>{e.then(e=>{const t=document.getElementById("main"),n=document.getElementById("country"),i=document.getElementById("temp"),o=document.getElementById("temp_max"),a=document.getElementById("temp_min"),c=document.getElementById("temp_feels"),s=document.getElementById("weather"),u=document.getElementById("pressure"),d=document.getElementById("wind"),l=document.getElementById("clouds"),m=document.getElementById("humidity"),p=document.getElementById("cities"),f=document.getElementById("now"),g=d.innerText;function b(e,t){return new RegExp(`(?:[^.w]|^|^\\W+)${t}(?:[^.w]|\\W(?=\\W+|$)|$)`).test(e)}f.innerText=r(),n.innerText=e.country,i.innerText=e.temp+"ยบ",o.innerText=e.tempMax+"ยบ",a.innerText=e.tempMin+"ยบ",c.innerText=e.feels+"ยบ",s.innerText=e.weather.weather,u.innerText=e.weather.pressure+"hPa",d.innerText=`${e.weather.wind.speed} ${g}`,l.innerText=e.weather.clouds+"%",m.innerText=e.weather.humidity+"%",p.innerText=e.city,t.style=function(e){const t=" background-position: center;\n                            background-repeat: no-repeat;\n                            background-size: cover; ";return b(e,"cloud")?"background-image:url(https://bit.ly/3dYq08Q);"+t:b(e,"snow")?"background-image:url(https://bit.ly/2BXTkz7);"+t:b(e,"rain")?"background-image:url(https://bit.ly/38q7HbN);"+t:b(e,"clear")?"background-image:url(https://bit.ly/3dZ3UmN);"+t:b(e,"sun")?"background-image:url(https://bit.ly/2D7qXPD);"+t:"background-image:url(https://bit.ly/3dZ3UmN);"+t}(s.innerText)})};(e=>{const t=document.getElementById("city"),n=document.getElementById("selector");n.addEventListener("change",t=>{const n=document.getElementById("cities").innerText;if(t.target.checked){const t=e.imperial(n);document.getElementById("wind").innerText="miles/s",i(t)}else{const t=e.celsius(n);document.getElementById("wind").innerText="mt/s",i(t)}}),t.addEventListener("keydown",()=>{if(13===event.keyCode){const{value:r}=t;if(t.value="",n.checked){const t=e.imperial(r);document.getElementById("wind").innerText="miles/h",i(t)}else{document.getElementById("wind").innerText="mt/s";const t=e.celsius(r);i(t)}}})})((()=>{async function e(e,t){try{const n=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${e}&units=${t}&APPID=cce2c60920c027318b4c5a975aebccc8`),r=await n.json(),i={weather:r.list[0].weather[0].description,pressure:r.list[0].main.pressure,wind:r.list[0].wind,clouds:r.list[0].clouds.all,humidity:r.list[0].main.humidity};return{city:e,weather:i,temp:r.list[0].main.temp,tempMax:r.list[0].main.temp_max,tempMin:r.list[0].main.temp_min,feels:r.list[0].main.feels_like,country:r.city.country}}catch(e){return alert("City does not exist"),"Something Happened"}}return{celsius:function(t){return e(t,"metric")},imperial:function(t){return e(t,"imperial")}}})())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9zdHlsZS5zY3NzP2U1ZDgiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9nZXREYXRlLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9yZW5kZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2RhdGFIYW5kbGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY2VudHJhbC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImFwaSIsImNvbnRlbnQiLCJkZWZhdWx0Iiwib3B0aW9ucyIsImxvY2FscyIsIm1lbW8iLCJpc09sZElFIiwiQm9vbGVhbiIsIndpbmRvdyIsImRvY3VtZW50IiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsImxlbmd0aCIsIm1vZHVsZXNUb0RvbSIsImxpc3QiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJjb25jYXQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJwdXNoIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJrZXlzIiwiZm9yRWFjaCIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiam9pbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJidG9hIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJ0b1N0cmluZyIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3BsaWNlIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwidXNlU291cmNlTWFwIiwidGhpcyIsIm1hcCIsImNzc01hcHBpbmciLCJzb3VyY2VNYXBwaW5nIiwiYmFzZTY0IiwiZGF0YSIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImN1cnJlbnREYXRldGltZSIsIkRhdGUiLCJnZXRNb250aCIsInRvVXBwZXJDYXNlIiwiZ2V0RGF0ZSIsImdldEZ1bGxZZWFyIiwicmVuZGVyIiwidGhlbiIsIm1haW4iLCJnZXRFbGVtZW50QnlJZCIsImNvdW50cnkiLCJ0ZW1wIiwidGVtcE1heCIsInRlbXBNaW4iLCJ0ZW1wRmVlbHMiLCJ3ZWF0aGVyIiwicHJlc3N1cmUiLCJ3aW5kIiwiY2xvdWRzIiwiaHVtaWRpdHkiLCJjaXR5Iiwibm93IiwibWV0cmljIiwiaW5uZXJUZXh0IiwiY29udGFpbnNXb3JkIiwic3RyaW5nIiwid29yZCIsIlJlZ0V4cCIsInRlc3QiLCJmZWVscyIsInNwZWVkIiwiZ2VuZXJhbFN0eWxlIiwiZ2V0QmFja2dyb3VuZCIsInNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY2hlY2tlZCIsInRvUmVuZGVyIiwiaW1wZXJpYWwiLCJjZWxzaXVzIiwia2V5Q29kZSIsImFzeW5jIiwibWVzdXJlIiwicmVzcG9uc2UiLCJmZXRjaCIsIndlYXRoZXJEYXRhIiwianNvbiIsImRlc2NyaXB0aW9uIiwidGVtcF9tYXgiLCJ0ZW1wX21pbiIsImZlZWxzX2xpa2UiLCJlcnIiLCJhbGVydCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVB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U0FDbkNDLEtBQU00QixFQUFZN0gsS0FBSyxHQUFHaUcsS0FDMUJDLE9BQVEyQixFQUFZN0gsS0FBSyxHQUFHa0csT0FBT2xILElBQ25DbUgsU0FBVTBCLEVBQVk3SCxLQUFLLEdBQUd3RixLQUFLVyxVQWFyQyxNQVZhLENBQ1hDLE9BQ0FMLFVBQ0FKLEtBQU1rQyxFQUFZN0gsS0FBSyxHQUFHd0YsS0FBS0csS0FDL0JDLFFBQVNpQyxFQUFZN0gsS0FBSyxHQUFHd0YsS0FBS3dDLFNBQ2xDbkMsUUFBU2dDLEVBQVk3SCxLQUFLLEdBQUd3RixLQUFLeUMsU0FDbENwQixNQUFPZ0IsRUFBWTdILEtBQUssR0FBR3dGLEtBQUswQyxXQUNoQ3hDLFFBQVNtQyxFQUFZekIsS0FBS1YsU0FJNUIsTUFBT3lDLEdBR1AsT0FEQUMsTUFBTSx1QkFDQyxzQkFTWCxNQUFPLENBQUViLFFBTlQsU0FBaUJuQixHQUNmLE9BQU9MLEVBQVFLLEVBQU0sV0FLTGtCLFNBSGxCLFNBQWtCbEIsR0FDaEIsT0FBT0wsRUFBUUssRUFBTSxlRC9CWiIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNCk7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgYnRvYSkge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1QcmVzcytTdGFydCsyUCZkaXNwbGF5PXN3YXApO1wiXSk7XG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vZGFrJmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDB9Lm1haW57cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDo1cmVtO3dpZHRoOjQ1cmVtO2hlaWdodDo0NXJlbTtib3JkZXItcmFkaXVzOjI1cHg7YmFja2dyb3VuZC1jb2xvcjojOTdiMGU1fS5tYWluIGRpdntjb2xvcjojZmZmfS5tYWluIC5kYXRlc3twb3NpdGlvbjpyZWxhdGl2ZTtib3JkZXItcmFkaXVzOjIwcHg7cGFkZGluZzoycmVtO2xlZnQ6LTExcmVtO3RvcDotMy41cmVtO3dpZHRoOmF1dG87aGVpZ2h0OjRyZW07ZGlzcGxheTpub25lO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MSwyMSw2LC41KTtmb250LWZhbWlseTpcXFwiUHJlc3MgU3RhcnQgMlBcXFwiLGN1cnNpdmV9Lm1haW4gLmRhdGVzIHNwYW57Y29sb3I6I2ZmZn0ubWFpbiAuY2l0eV9jb3VudHJ5e3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoxcmVtO3dpZHRoOmF1dG87cGFkZGluZzoycmVtO2hlaWdodDoycmVtO2Rpc3BsYXk6bm9uZTtmb250LWZhbWlseTpcXFwiUHJlc3MgU3RhcnQgMlBcXFwiLGN1cnNpdmU7Ym9yZGVyLXJhZGl1czoyNXB4fS5tYWluIC5jaXR5X2NvdW50cnkgI2NpdGllc3tmb250LXNpemU6Mi41NHJlbTtjb2xvcjojMDAwfS5tYWluIC5jaXR5X2NvdW50cnkgI2NvdW50cnl7Zm9udC1zaXplOjJyZW07cGFkZGluZzoxcmVtO21hcmdpbi1sZWZ0OjEuNXJlbTtib3JkZXItcmFkaXVzOjI1JTtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MSwyMSw2LC41KX0ubWFpbiAuc3dpdGNoe3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6LjVyZW07d2lkdGg6NjBweDtoZWlnaHQ6MzRweDttYXJnaW46NXB4O3RvcDotNHJlbTtsZWZ0OjE1cmVtO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MSwyMSw2LDApfS5tYWluIC5zd2l0Y2ggI2NlbnRpZ3JhZGVze3Bvc2l0aW9uOmFic29sdXRlO2ZvbnQtc2l6ZToxLjVyZW07cmlnaHQ6NHJlbTt0b3A6LTAuMTVyZW07Y29sb3I6IzAwMDtmb250LWZhbWlseTpcXFwiTW9kYWtcXFwiLGN1cnNpdmV9Lm1haW4gLnN3aXRjaCAjZmFyZW5oe3Bvc2l0aW9uOmFic29sdXRlO2ZvbnQtc2l6ZToxLjVyZW07cmlnaHQ6LTJyZW07dG9wOi0wLjE1cmVtO2NvbG9yOiMwMDA7Zm9udC1mYW1pbHk6XFxcIk1vZGFrXFxcIixjdXJzaXZlfS5tYWluIC5zbGlkZXJ7cG9zaXRpb246YWJzb2x1dGU7Y3Vyc29yOnBvaW50ZXI7dG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQ1LDg1LDEzLC43KTstd2Via2l0LXRyYW5zaXRpb246LjRzO3RyYW5zaXRpb246LjRzfS5tYWluIC5zbGlkZXI6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlxcXCJcXFwiO2hlaWdodDoyNnB4O3dpZHRoOjI2cHg7bGVmdDo0cHg7Ym90dG9tOjRweDtiYWNrZ3JvdW5kLWNvbG9yOiNkODUyMDQ7LXdlYmtpdC10cmFuc2l0aW9uOi40czt0cmFuc2l0aW9uOi40c30ubWFpbiBpbnB1dDpjaGVja2VkKy5zbGlkZXJ7YmFja2dyb3VuZC1jb2xvcjojMDY0MTU4fS5tYWluIGlucHV0OmZvY3VzKy5zbGlkZXJ7Ym94LXNoYWRvdzowIDAgMXB4ICMwNjQxNTh9Lm1haW4gaW5wdXQ6Y2hlY2tlZCsuc2xpZGVyOjpiZWZvcmV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgyNnB4KTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjZweCl9Lm1haW4gLnNsaWRlci5yb3VuZHtib3JkZXItcmFkaXVzOjM0cHh9Lm1haW4gLnNsaWRlci5yb3VuZDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6IzQyZDQxNjtib3JkZXItcmFkaXVzOjUwJX0ubWFpbiAub3RoZXJze3Bvc2l0aW9uOnJlbGF0aXZlO2xlZnQ6MDtib3R0b206LTlyZW07d2lkdGg6MzVyZW07aGVpZ2h0OjVyZW07Ym9yZGVyLXJhZGl1czoyNXB4O2JhY2tncm91bmQtY29sb3I6cmdiYSg1OSwzMywyLC41KX0ubWFpbiAub3RoZXJzIGRpdntib3JkZXItcmFkaXVzOjI1JTtwYWRkaW5nOjFyZW07YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDE1LDU2LC40KX0ubWFpbiAub3RoZXJzIGRpdiBzcGFue2NvbG9yOiNmZmZ9Lm1haW4gLmlucHV0X2NpdHl7bWFyZ2luLXRvcDo1cmVtO3BhZGRpbmc6MXJlbTtwb3NpdGlvbjpyZWxhdGl2ZTtib3R0b206LTQuNXJlbTtib3JkZXItcmFkaXVzOjI1cHg7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQsMzMsNDEsLjUpfS5tYWluIC5pbnB1dF9jaXR5ICNjaXR5e3RleHQtYWxpZ246Y2VudGVyfS5tYWluICNub19jaXR5e2Rpc3BsYXk6bm9uZX0ubWFpbiAjdGVtcHtmb250LXNpemU6NXJlbTtjb2xvcjojZDFkMGQ2O2ZvbnQtZmFtaWx5OlxcXCJNb2Rha1xcXCIsY3Vyc2l2ZX0ubWFpbiAudGVtcHN7Ym9yZGVyLXJhZGl1czoyNXB4O2JhY2tncm91bmQtY29sb3I6cmdiYSg3OCwzMCw3LC40KTtwb3NpdGlvbjpyZWxhdGl2ZTtib3R0b206LTdyZW07d2lkdGg6MzVyZW07aGVpZ2h0OjEwcmVtfS5tYWluIC50ZW1wcyBkaXZ7Ym9yZGVyLXJhZGl1czoyNXB4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6MXJlbX0ubWFpbiAudGVtcHMgI3RlbXBlcmF0dXJle2NvbG9yOiMwNTAwMDA7Zm9udC13ZWlnaHQ6NDAwO3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoxcmVtO2ZvbnQtc2l6ZToxLjVyZW07Zm9udC1mYW1pbHk6XFxcIk1vZGFrXFxcIixjdXJzaXZlfS5tYWluIC50ZW1wcyAubWlzY2VsYW5pb3Vze2JhY2tncm91bmQtY29sb3I6cmdiYSgzLDUxLDYzLC43KX0ubWFpbiAudGVtcHMgLm1pc2NlbGFuaW91cyBkaXZ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDYxLDIxLDYsLjUpfS5tYWluIC50ZW1wcyAubWlzY2VsYW5pb3VzIGRpdiBzcGFue2NvbG9yOiNmZmZ9XCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsImNvbnN0IGdldERhdGUgPSAoKSA9PiB7XG4gIGNvbnN0IG1vbnRoTmFtZXMgPSBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLFxuICAgICdKdWx5JywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2N0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddO1xuICBjb25zdCBjdXJyZW50RGF0ZXRpbWUgPSBuZXcgRGF0ZSgpO1xuICByZXR1cm4gYCR7bW9udGhOYW1lc1soY3VycmVudERhdGV0aW1lLmdldE1vbnRoKCkpXS50b1VwcGVyQ2FzZSgpfSAvICR7Y3VycmVudERhdGV0aW1lLmdldERhdGUoKX0gLyAke2N1cnJlbnREYXRldGltZS5nZXRGdWxsWWVhcigpfWA7XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2V0RGF0ZTsiLCJpbXBvcnQgZ2V0RGF0ZSBmcm9tICcuL2dldERhdGUnO1xuXG5jb25zdCByZW5kZXJzID0gKGRhdGEpID0+IHtcbiAgZGF0YS50aGVuKGRhdGEgPT4ge1xuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpO1xuICAgIGNvbnN0IGNvdW50cnkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY291bnRyeScpO1xuICAgIGNvbnN0IHRlbXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVtcCcpO1xuICAgIGNvbnN0IHRlbXBNYXggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVtcF9tYXgnKTtcbiAgICBjb25zdCB0ZW1wTWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXBfbWluJyk7XG4gICAgY29uc3QgdGVtcEZlZWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXBfZmVlbHMnKTtcbiAgICBjb25zdCB3ZWF0aGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dlYXRoZXInKTtcbiAgICBjb25zdCBwcmVzc3VyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmVzc3VyZScpO1xuICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZCcpO1xuICAgIGNvbnN0IGNsb3VkcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbG91ZHMnKTtcbiAgICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdodW1pZGl0eScpO1xuICAgIGNvbnN0IGNpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2l0aWVzJyk7XG4gICAgY29uc3Qgbm93ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdycpO1xuXG4gICAgY29uc3QgbWV0cmljID0gd2luZC5pbm5lclRleHQ7XG4gICAgY29uc3Qgc3VubnkgPSAnaHR0cHM6Ly9iaXQubHkvMkQ3cVhQRCc7XG4gICAgY29uc3QgYnJva2VuQ2xvdWRzID0gJ2h0dHBzOi8vYml0Lmx5LzNkWXEwOFEnO1xuICAgIGNvbnN0IHNub3cgPSAnaHR0cHM6Ly9iaXQubHkvMkJYVGt6Nyc7XG4gICAgY29uc3QgcmFpbiA9ICdodHRwczovL2JpdC5seS8zOHE3SGJOJztcbiAgICBjb25zdCBjbGVhclNreSA9ICdodHRwczovL2JpdC5seS8zZFozVW1OJztcblxuICAgIGZ1bmN0aW9uIGNvbnRhaW5zV29yZChzdHJpbmcsIHdvcmQpIHtcbiAgICAgIHJldHVybiBuZXcgUmVnRXhwKGAoPzpbXi53XXxefF5cXFxcVyspJHt3b3JkfSg/OlteLnddfFxcXFxXKD89XFxcXFcrfCQpfCQpYCkudGVzdChzdHJpbmcpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRCYWNrZ3JvdW5kKHdlYXRoZXIpIHtcbiAgICAgIGNvbnN0IGdlbmVyYWxTdHlsZSA9IGAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgYDtcblxuICAgICAgaWYgKGNvbnRhaW5zV29yZCh3ZWF0aGVyLCAnY2xvdWQnKSkge1xuICAgICAgICByZXR1cm4gYGJhY2tncm91bmQtaW1hZ2U6dXJsKCR7YnJva2VuQ2xvdWRzfSk7JHtnZW5lcmFsU3R5bGV9YDtcbiAgICAgIH1cbiAgICAgIGlmIChjb250YWluc1dvcmQod2VhdGhlciwgJ3Nub3cnKSkge1xuICAgICAgICByZXR1cm4gYGJhY2tncm91bmQtaW1hZ2U6dXJsKCR7c25vd30pOyR7Z2VuZXJhbFN0eWxlfWA7XG4gICAgICB9XG4gICAgICBpZiAoY29udGFpbnNXb3JkKHdlYXRoZXIsICdyYWluJykpIHtcbiAgICAgICAgcmV0dXJuIGBiYWNrZ3JvdW5kLWltYWdlOnVybCgke3JhaW59KTske2dlbmVyYWxTdHlsZX1gO1xuICAgICAgfVxuICAgICAgaWYgKGNvbnRhaW5zV29yZCh3ZWF0aGVyLCAnY2xlYXInKSkge1xuICAgICAgICByZXR1cm4gYGJhY2tncm91bmQtaW1hZ2U6dXJsKCR7Y2xlYXJTa3l9KTske2dlbmVyYWxTdHlsZX1gO1xuICAgICAgfVxuICAgICAgaWYgKGNvbnRhaW5zV29yZCh3ZWF0aGVyLCAnc3VuJykpIHtcbiAgICAgICAgcmV0dXJuIGBiYWNrZ3JvdW5kLWltYWdlOnVybCgke3N1bm55fSk7JHtnZW5lcmFsU3R5bGV9YDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBgYmFja2dyb3VuZC1pbWFnZTp1cmwoJHtjbGVhclNreX0pOyR7Z2VuZXJhbFN0eWxlfWA7XG4gICAgfVxuXG5cbiAgICBub3cuaW5uZXJUZXh0ID0gZ2V0RGF0ZSgpO1xuICAgIGNvdW50cnkuaW5uZXJUZXh0ID0gZGF0YS5jb3VudHJ5O1xuICAgIHRlbXAuaW5uZXJUZXh0ID0gYCR7ZGF0YS50ZW1wfcK6YDtcbiAgICB0ZW1wTWF4LmlubmVyVGV4dCA9IGAke2RhdGEudGVtcE1heH3CumA7XG4gICAgdGVtcE1pbi5pbm5lclRleHQgPSBgJHtkYXRhLnRlbXBNaW59wrpgO1xuICAgIHRlbXBGZWVscy5pbm5lclRleHQgPSBgJHtkYXRhLmZlZWxzfcK6YDtcbiAgICB3ZWF0aGVyLmlubmVyVGV4dCA9IGRhdGEud2VhdGhlci53ZWF0aGVyO1xuICAgIHByZXNzdXJlLmlubmVyVGV4dCA9IGAke2RhdGEud2VhdGhlci5wcmVzc3VyZX1oUGFgO1xuICAgIHdpbmQuaW5uZXJUZXh0ID0gYCR7ZGF0YS53ZWF0aGVyLndpbmQuc3BlZWR9ICR7bWV0cmljfWA7XG4gICAgY2xvdWRzLmlubmVyVGV4dCA9IGAke2RhdGEud2VhdGhlci5jbG91ZHN9JWA7XG4gICAgaHVtaWRpdHkuaW5uZXJUZXh0ID0gYCR7ZGF0YS53ZWF0aGVyLmh1bWlkaXR5fSVgO1xuICAgIGNpdHkuaW5uZXJUZXh0ID0gZGF0YS5jaXR5O1xuICAgIG1haW4uc3R5bGUgPSBnZXRCYWNrZ3JvdW5kKHdlYXRoZXIuaW5uZXJUZXh0KTtcbiAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgcmVuZGVyczsiLCJpbXBvcnQgcmVuZGVyIGZyb20gJy4vcmVuZGVyJztcblxuY29uc3QgZGF0YUhhbmRsZXIgPSAoZGF0YSkgPT4ge1xuICBjb25zdCBjaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NpdHknKTtcbiAgY29uc3Qgc2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VsZWN0b3InKTtcblxuXG4gIHNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NpdGllcycpLmlubmVyVGV4dDtcbiAgICBpZiAoIWV2ZW50LnRhcmdldC5jaGVja2VkKSB7XG4gICAgICBjb25zdCB0b1JlbmRlciA9IGRhdGEuY2Vsc2l1cyh2YWx1ZSk7XG4gICAgICBjb25zdCB3aW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dpbmQnKTtcbiAgICAgIHdpbmQuaW5uZXJUZXh0ID0gJ210L3MnO1xuICAgICAgcmVuZGVyKHRvUmVuZGVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdG9SZW5kZXIgPSBkYXRhLmltcGVyaWFsKHZhbHVlKTtcbiAgICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZCcpO1xuICAgICAgd2luZC5pbm5lclRleHQgPSAnbWlsZXMvcyc7XG4gICAgICByZW5kZXIodG9SZW5kZXIpO1xuICAgIH1cbiAgfSk7XG5cblxuICBjaXR5LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoKSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAgIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gY2l0eTtcbiAgICAgIGNpdHkudmFsdWUgPSAnJztcbiAgICAgIGlmICghc2VsZWN0b3IuY2hlY2tlZCkge1xuICAgICAgICBjb25zdCB3aW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dpbmQnKTtcbiAgICAgICAgd2luZC5pbm5lclRleHQgPSAnbXQvcyc7XG4gICAgICAgIGNvbnN0IHRvUmVuZGVyID0gZGF0YS5jZWxzaXVzKHZhbHVlKTtcbiAgICAgICAgcmVuZGVyKHRvUmVuZGVyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHRvUmVuZGVyID0gZGF0YS5pbXBlcmlhbCh2YWx1ZSk7XG4gICAgICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZCcpO1xuICAgICAgICB3aW5kLmlubmVyVGV4dCA9ICdtaWxlcy9oJztcbiAgICAgICAgcmVuZGVyKHRvUmVuZGVyKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YUhhbmRsZXI7IiwiaW1wb3J0ICcuLi9zdHlsZXMvc3R5bGUuc2Nzcyc7XG5pbXBvcnQgQ2VudHJhbCBmcm9tICcuL2NlbnRyYWwnO1xuaW1wb3J0IGRhdGFIYW5kbGVyIGZyb20gJy4vZGF0YUhhbmRsZXInO1xuXG5jb25zdCBkYXRhID0gQ2VudHJhbCgpO1xuZGF0YUhhbmRsZXIoZGF0YSk7XG4iLCJcbmNvbnN0IENlbnRyYWwgPSAoKSA9PiB7XG4gIGFzeW5jIGZ1bmN0aW9uIHdlYXRoZXIoY2l0eSwgbWVzdXJlKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L2ZvcmVjYXN0P3E9JHtjaXR5fSZ1bml0cz0ke21lc3VyZX0mQVBQSUQ9Y2NlMmM2MDkyMGMwMjczMThiNGM1YTk3NWFlYmNjYzhgKTtcbiAgICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgY29uc3Qgd2VhdGhlciA9IHtcbiAgICAgICAgd2VhdGhlcjogd2VhdGhlckRhdGEubGlzdFswXS53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uLFxuICAgICAgICBwcmVzc3VyZTogd2VhdGhlckRhdGEubGlzdFswXS5tYWluLnByZXNzdXJlLFxuICAgICAgICB3aW5kOiB3ZWF0aGVyRGF0YS5saXN0WzBdLndpbmQsXG4gICAgICAgIGNsb3Vkczogd2VhdGhlckRhdGEubGlzdFswXS5jbG91ZHMuYWxsLFxuICAgICAgICBodW1pZGl0eTogd2VhdGhlckRhdGEubGlzdFswXS5tYWluLmh1bWlkaXR5LFxuICAgICAgfTtcblxuICAgICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgY2l0eSxcbiAgICAgICAgd2VhdGhlcixcbiAgICAgICAgdGVtcDogd2VhdGhlckRhdGEubGlzdFswXS5tYWluLnRlbXAsXG4gICAgICAgIHRlbXBNYXg6IHdlYXRoZXJEYXRhLmxpc3RbMF0ubWFpbi50ZW1wX21heCxcbiAgICAgICAgdGVtcE1pbjogd2VhdGhlckRhdGEubGlzdFswXS5tYWluLnRlbXBfbWluLFxuICAgICAgICBmZWVsczogd2VhdGhlckRhdGEubGlzdFswXS5tYWluLmZlZWxzX2xpa2UsXG4gICAgICAgIGNvdW50cnk6IHdlYXRoZXJEYXRhLmNpdHkuY291bnRyeSxcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWFsZXJ0XG4gICAgICBhbGVydCgnQ2l0eSBkb2VzIG5vdCBleGlzdCcpO1xuICAgICAgcmV0dXJuICdTb21ldGhpbmcgSGFwcGVuZWQnO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjZWxzaXVzKGNpdHkpIHtcbiAgICByZXR1cm4gd2VhdGhlcihjaXR5LCAnbWV0cmljJyk7XG4gIH1cbiAgZnVuY3Rpb24gaW1wZXJpYWwoY2l0eSkge1xuICAgIHJldHVybiB3ZWF0aGVyKGNpdHksICdpbXBlcmlhbCcpO1xuICB9XG4gIHJldHVybiB7IGNlbHNpdXMsIGltcGVyaWFsIH07XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IENlbnRyYWw7Il0sInNvdXJjZVJvb3QiOiIifQ==